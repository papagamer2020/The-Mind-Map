[{"C:\\The-Mind-Map\\src\\index.js":"1","C:\\The-Mind-Map\\src\\App.js":"2","C:\\The-Mind-Map\\src\\components\\createUser\\index.js":"3","C:\\The-Mind-Map\\src\\components\\Login\\index.js":"4","C:\\The-Mind-Map\\src\\utils\\helpers.js":"5"},{"size":470,"mtime":1652140041964,"results":"6","hashOfConfig":"7"},{"size":201,"mtime":1652165834612,"results":"8","hashOfConfig":"7"},{"size":3116,"mtime":1652155055803,"results":"9","hashOfConfig":"7"},{"size":3153,"mtime":1652158058182,"results":"10","hashOfConfig":"7"},{"size":386,"mtime":1652144068049,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"9d21ib",{"filePath":"14","messages":"15","errorCount":1,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":9,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":10,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"C:\\The-Mind-Map\\src\\index.js",["25"],"C:\\The-Mind-Map\\src\\App.js",["26","27","28","29","30"],"C:\\The-Mind-Map\\src\\components\\createUser\\index.js",["31","32","33","34","35","36","37","38","39","40","41","42","43"],"import React from 'react';\r\nimport { validateEmail } from '../../utils/helpers';\r\n\r\nfunction createUser() {\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n  \r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const { email, password } = formState;\r\n  \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!errorMessage) {\r\n            console.log('Submit Form', formState);\r\n        }\r\n    };\r\n  \r\n    const handleChange = (e) => {\r\n        if (e.target.name === 'email') {\r\n            const isValid = validateEmail(e.target.value);\r\n        if (!isValid) {\r\n            setErrorMessage('Your email is invalid.');\r\n        } else {\r\n            setErrorMessage('');\r\n        }\r\n        } else {\r\n        if (!e.target.value.length) {\r\n          setErrorMessage(`${e.target.name} is required.`);\r\n        } else {\r\n          setErrorMessage('');\r\n        }\r\n        }\r\n        if (!errorMessage) {\r\n        setFormState({ ...formState, [e.target.name]: e.target.value });\r\n            console.log('Handle Form', formState);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div class=\"column is half is-left\">\r\n            <div class=\"container has-text-centered\">\r\n                <div class=\"column is-4 is-offset-4\">\r\n                    <blockquote>Organize your thoughts and destress immediatly as you layout your thoughts and plans! The mindmap allows you to plan out complex plots, theories, and ideas with ease.</blockquote>\r\n                    <div class=\"login-hr\"/>\r\n                        <p class=\"subtitle has-text-black\">Create your account:</p>\r\n                        <div class=\"box\">\r\n                            <form onSubmit={userEmail.handleSubmit}>\r\n                                <div class=\"field\">\r\n                                    <div class=\"control\">\r\n                                        <input class=\"input is-rounded\" type=\"email\" value={userEmail.state.email} placeholder=\"Your Email\" onChange={userEmail.handleChange}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"field\">\r\n                                    <div class=\"control\">\r\n                                        <input class=\"input is-rounded\" type=\"password\" value={userPassword.state.password} placeholder=\"Your Password\"onChange={userPassword.handleChange}/>\r\n                                    </div>\r\n                                </div>\r\n                                <button class=\"button is-block is-black is-fullwidth is-r is-rounded\">Create account\r\n                                <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <p class=\"has-text-black\">\r\n                        <button class=\"button is-block is-white is-fullwidth is-r is-rounded\">Already have an account?</button> &nbsp;·&nbsp;\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        )\r\n    };\r\n\r\nexport default createUser;",["44","45"],"C:\\The-Mind-Map\\src\\components\\Login\\index.js",["46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63"],"import { makeUniqueId } from '@apollo/client/utilities';\r\nimport React from 'react';\r\n\r\nfunction LoggedoutUser(props) {\r\n    const isLoggedIn = props.isLoggedIn;\r\n    if (isLoggedin) {\r\n        return '/main.html'\r\n    }\r\n    return\r\n}\r\n\r\nfunction ContactForm() {\r\n    const [formState, setFormState] = useState({ password: '', email: '' });\r\n  \r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const { password, email } = formState;\r\n  \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!errorMessage) {\r\n            console.log('Submit Form', formState);\r\n        }\r\n    };\r\n  \r\n    const handleChange = (e) => {\r\n        if (e.target.name === 'email') {\r\n            const isValid = validateEmail(e.target.value);\r\n        if (!isValid) {\r\n            setErrorMessage('Your email is invalid.');\r\n        } else {\r\n            setErrorMessage('');\r\n        }\r\n        } else {\r\n        if (!e.target.value.length) {\r\n            setErrorMessage(`${e.target.name} is required.`);\r\n        } else {\r\n            setErrorMessage('');\r\n        }\r\n        }\r\n        if (!errorMessage) {\r\n            setFormState({ ...formState, [e.target.name]: e.target.value });\r\n            console.log('Handle Form', formState);\r\n        }\r\n    };\r\n\r\n    return (\r\n    <div class=\"column is half is-left\">\r\n        <div class=\"container has-text-centered\">\r\n            <div class=\"column is-4 is-offset-4\">\r\n                <blockquote>Organize your thoughts and destress immediatly as you layout your thoughts and plans! The mindmap allows you to plan out complex plots, theories, and ideas with ease.</blockquote>\r\n                <div class=\"login-hr\"/>\r\n                    <p class=\"subtitle has-text-black\">Please login to proceed</p>\r\n                    <div class=\"box\">\r\n                        <form onSubmit={userEmail.handleSubmit}>\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input class=\"input is-rounded\" type=\"email\" value={userEmail.state.email} placeholder=\"Your Email\" onChange={userEmail.handleChange}/>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"field\">\r\n                                <div class=\"control\">\r\n                                    <input class=\"input is-rounded\" type=\"password\" value={userPassword.state.password} placeholder=\"Your Password\"onChange={userPassword.handleChange}/>\r\n                                </div>\r\n                            </div>\r\n                            <button class=\"button is-block is-black is-fullwidth is-r is-rounded\">Login\r\n                            <i class=\"fa fa-sign-in\" aria-hidden=\"true\"></i></button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <p class=\"has-text-black\">\r\n                    <button class=\"button is-block is-white is-fullwidth is-r is-rounded\">Already have an account?</button> &nbsp;·&nbsp;\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n    };\r\n\r\nexport default Login;","C:\\The-Mind-Map\\src\\utils\\helpers.js",[],{"ruleId":"64","severity":2,"message":"65","line":16,"column":1,"nodeType":"66","messageId":"67","endLine":16,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"66","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"68","severity":1,"message":"71","line":2,"column":8,"nodeType":"66","messageId":"70","endLine":2,"endColumn":18},{"ruleId":"68","severity":1,"message":"72","line":3,"column":8,"nodeType":"66","messageId":"70","endLine":3,"endColumn":13},{"ruleId":"68","severity":1,"message":"73","line":6,"column":12,"nodeType":"66","messageId":"70","endLine":6,"endColumn":22},{"ruleId":"64","severity":2,"message":"74","line":6,"column":26,"nodeType":"66","messageId":"67","endLine":6,"endColumn":34},{"ruleId":"75","severity":2,"message":"76","line":5,"column":39,"nodeType":"66","endLine":5,"endColumn":47},{"ruleId":"64","severity":2,"message":"74","line":5,"column":39,"nodeType":"66","messageId":"67","endLine":5,"endColumn":47},{"ruleId":"75","severity":2,"message":"76","line":7,"column":45,"nodeType":"66","endLine":7,"endColumn":53},{"ruleId":"64","severity":2,"message":"74","line":7,"column":45,"nodeType":"66","messageId":"67","endLine":7,"endColumn":53},{"ruleId":"68","severity":1,"message":"77","line":8,"column":13,"nodeType":"66","messageId":"70","endLine":8,"endColumn":18},{"ruleId":"68","severity":1,"message":"78","line":8,"column":20,"nodeType":"66","messageId":"70","endLine":8,"endColumn":28},{"ruleId":"68","severity":1,"message":"79","line":10,"column":11,"nodeType":"66","messageId":"70","endLine":10,"endColumn":23},{"ruleId":"68","severity":1,"message":"80","line":17,"column":11,"nodeType":"66","messageId":"70","endLine":17,"endColumn":23},{"ruleId":"64","severity":2,"message":"81","line":46,"column":45,"nodeType":"66","messageId":"67","endLine":46,"endColumn":54},{"ruleId":"64","severity":2,"message":"81","line":49,"column":93,"nodeType":"66","messageId":"67","endLine":49,"endColumn":102},{"ruleId":"64","severity":2,"message":"81","line":49,"column":151,"nodeType":"66","messageId":"67","endLine":49,"endColumn":160},{"ruleId":"64","severity":2,"message":"82","line":54,"column":96,"nodeType":"66","messageId":"67","endLine":54,"endColumn":108},{"ruleId":"64","severity":2,"message":"82","line":54,"column":162,"nodeType":"66","messageId":"67","endLine":54,"endColumn":174},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"68","severity":1,"message":"87","line":1,"column":10,"nodeType":"66","messageId":"70","endLine":1,"endColumn":22},{"ruleId":"68","severity":1,"message":"88","line":4,"column":10,"nodeType":"66","messageId":"70","endLine":4,"endColumn":23},{"ruleId":"68","severity":1,"message":"89","line":5,"column":11,"nodeType":"66","messageId":"70","endLine":5,"endColumn":21},{"ruleId":"64","severity":2,"message":"90","line":6,"column":9,"nodeType":"66","messageId":"67","endLine":6,"endColumn":19},{"ruleId":"68","severity":1,"message":"91","line":12,"column":10,"nodeType":"66","messageId":"70","endLine":12,"endColumn":21},{"ruleId":"64","severity":2,"message":"74","line":13,"column":39,"nodeType":"66","messageId":"67","endLine":13,"endColumn":47},{"ruleId":"64","severity":2,"message":"74","line":15,"column":45,"nodeType":"66","messageId":"67","endLine":15,"endColumn":53},{"ruleId":"68","severity":1,"message":"78","line":16,"column":13,"nodeType":"66","messageId":"70","endLine":16,"endColumn":21},{"ruleId":"68","severity":1,"message":"77","line":16,"column":23,"nodeType":"66","messageId":"70","endLine":16,"endColumn":28},{"ruleId":"68","severity":1,"message":"79","line":18,"column":11,"nodeType":"66","messageId":"70","endLine":18,"endColumn":23},{"ruleId":"68","severity":1,"message":"80","line":25,"column":11,"nodeType":"66","messageId":"70","endLine":25,"endColumn":23},{"ruleId":"64","severity":2,"message":"92","line":27,"column":29,"nodeType":"66","messageId":"67","endLine":27,"endColumn":42},{"ruleId":"64","severity":2,"message":"81","line":54,"column":41,"nodeType":"66","messageId":"67","endLine":54,"endColumn":50},{"ruleId":"64","severity":2,"message":"81","line":57,"column":89,"nodeType":"66","messageId":"67","endLine":57,"endColumn":98},{"ruleId":"64","severity":2,"message":"81","line":57,"column":147,"nodeType":"66","messageId":"67","endLine":57,"endColumn":156},{"ruleId":"64","severity":2,"message":"82","line":62,"column":92,"nodeType":"66","messageId":"67","endLine":62,"endColumn":104},{"ruleId":"64","severity":2,"message":"82","line":62,"column":158,"nodeType":"66","messageId":"67","endLine":62,"endColumn":170},{"ruleId":"64","severity":2,"message":"93","line":78,"column":16,"nodeType":"66","messageId":"67","endLine":78,"endColumn":21},"no-undef","'reportWebVitals' is not defined.","Identifier","undef","no-unused-vars","'React' is defined but never used.","unusedVar","'createUser' is defined but never used.","'Login' is defined but never used.","'categories' is assigned a value but never used.","'useState' is not defined.","react-hooks/rules-of-hooks","React Hook \"useState\" is called in function \"createUser\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter. React Hook names must start with the word \"use\".","'email' is assigned a value but never used.","'password' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'handleChange' is assigned a value but never used.","'userEmail' is not defined.","'userPassword' is not defined.","no-native-reassign",["94"],"no-negated-in-lhs",["95"],"'makeUniqueId' is defined but never used.","'LoggedoutUser' is defined but never used.","'isLoggedIn' is assigned a value but never used.","'isLoggedin' is not defined.","'ContactForm' is defined but never used.","'validateEmail' is not defined.","'Login' is not defined.","no-global-assign","no-unsafe-negation"]